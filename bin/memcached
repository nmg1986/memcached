#!/bin/sh
# Copyright (c) 2011-2014 DHeaven.
#
# Author: niuminguo@d-heaven.com 
#
# /etc/init.d/memcached
#
#   and symbolic its link
#
# /usr/sbin/rcmemcached
#
# System startup script for the nginx daemon
#
### BEGIN INIT INFO
# Provides:      memcached 
# Required-Start: 
# Should-Start:   
# Required-Stop:  
# Should-Stop:    
# Default-Start:  3 5
# Default-Stop:   0 1 2 6
# Short-Description:  web service
# Description:    web service
### END INIT INFO

MEMCACHED_BIN=/usr/local/bin/memcached

test -x $MEMCACHED_BIN || {
echo "$(basename $MEMCACHED_BIN) is not installed"
exit 5
}

MEMCACHED_CONFIG=/etc/memcached.conf
test -r $MEMCACHED_CONFIG || {
echo "$MEMCACHED_CONFIG is not exist"
exit 6
}

. $MEMCACHED_CONFIG

# Shell functions sourced from /etc/rc.status:
#      rc_check         check and set local and overall rc status
#      rc_status        check and set local and overall rc status
#      rc_status -v     ditto but be verbose in local rc status
#      rc_status -v -r  ditto and clear the local rc status
#      rc_failed        set local and overall rc status to failed
#      rc_failed <num>  set local and overall rc status to <num><num>
#      rc_reset         clear local rc status (overall remains)
#      rc_exit          exit appropriate to overall rc status

# Load the rc.status script for this service.
. /etc/rc.status


# Reset status of this service
rc_reset


case "$1" in
    start)
        echo -n "Starting Memcached "
        ## Start daemon with startproc(8). If this fails
        ## the return value is set appropriately by startproc.
        #startproc -u $MEMCACHED_USER -g $MEMCACHED_GROUP $MEMCACHED_BIN $MEMCACHED_PARAMS
	startproc $MEMCACHED_BIN $MEMCACHED_PARAMS
        # Remember status and be verbose
        rc_status -v
        ;;
    stop)
        echo -n "Shutting Down Memcached "
        ## Stop daemon with killproc(8) and if this fails
        ## killproc sets the return value according to LSB.

        killproc -TERM $MEMCACHED_BIN

        # Remember status and be verbose
        rc_status -v
        ;;
    restart)
        ## Stop the service and regardless of whether it was
        ## running or not, start it again.
        $0 stop
        $0 start

        # Remember status and be quiet
        rc_status
        ;;
    reload)
        # If it supports signaling:
        echo -n "Reload Service Nginx "
        killproc -HUP $MEMCACHED_BIN
        rc_status -v

        ## Otherwise if it does not support reload:
        #rc_failed 3
        #rc_status -v
        ;;
    status)
        echo -n "Checking for service Memcached "
        ## Check status with checkproc(8), if process is running
        ## checkproc will return with exit status 0.

        # Return value is slightly different for the status command:
        # 0 - service up and running
        # 1 - service dead, but /var/run/  pid  file exists
        # 2 - service dead, but /var/lock/ lock file exists
        # 3 - service not running (unused)
        # 4 - service status unknown :-(
        # 5--199 reserved (5--99 LSB, 100--149 distro, 150--199 appl.)

        # NOTE: checkproc returns LSB compliant status values.
        checkproc $MEMCACHED_BIN
        # NOTE: rc_status knows that we called this init script with
        # "status" option and adapts its messages accordingly.
        rc_status -v
        ;;
    *)
        ## If no parameters are given, print which are avaiable.
        echo "Usage: $0 {start|stop|status|restart|reload}"
        exit 1
        ;;
esac
rc_exit
	
		
